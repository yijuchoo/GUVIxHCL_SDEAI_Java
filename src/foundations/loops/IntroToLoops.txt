Intro to Loops
- A loop repeats work zero or more times and is defined by 3 parts:
    • Start (initial values)
    • Condition (when to continue)
    • Update (how to move toward stopping)

Example
    Start at 1, continue while <= 5, add 1 each time => runs 5 times

Changing any 1 part will change the total iterations;
a missing or wrong update is the usual cause of an infinite loop
    - Always ask:
        "What makes this loop eventually stop?"
    - Tie the rule to code so intent stays clear:
            int i = 1;          // Start
            while (i <= 5) {    // Condition
                                // work
            i = i + 1;          // Update
            }

Types of Loops
- for-loop
    • Used when the number of iterations is known or counted
    • Header shows Start, Condition and Update together -> Easy to read
    Example
        // Process items 0 to 10
        // Start from 0, scan 10 items, increase value of i by 1 after the loop is executed (post increment i++)
        for (int i = 0; i < 10; i++) {
        ...
        }

- while loop
    • Used when repeat until a rule is satisfied and the count is not known upfront
    • It keeps going while this remain true
    Example
        // Ask until the input is valid
        while (!isValid) {
        ...
        }

- do-while loop
    • Used when the body must run at least once before you can check the condition
    • Execute the code block once then check is the condition valid
    Example
        // Show menu once, then ask to continue
        do {
        ...
        } while (choice != 'q');