Arrays: The Mental Model

What is an array?
    - A fixed size, ordered collection of elements of the same type
        Eg. int[] a = {10, 20, 30};
            // index =  0   1   2
            System.out.println(a[0]);     // 10
            System.out.println(a.length); // 3

    - Addressed by 0-based indices

What does not change after creation?
    - Length is fixed once array is allocated.
    - Reads and writes by index are constant time

How Arrays live in memory?
    - Arrays are objects, a variable holds a reference to the array.
    - Valid indices are 0 through array length -1;
      Anything else will give an error

When arrays fit well:
    - Number of items is known or stable
    - Require predictable indexed traversal or in-place updates

Declaring & Creating Arrays
    - Declaration names a variable whose type is "Array of T"
        int[] a -> Common Form
        int a[] is also valid but less consistent

    - Creation allocates array object with a chosen length
        Use new int[n] when you know the size at runtime.
            eg. new int[3] -> creating an array of size 3 of 3 elements.
        Use a literal like {10, 20, 30} when you know the values upfront.

    - Variables hold references to array objects
        - Assigning one array variable to another copies the reference, not the elements.

Indexing and Length
    - Valid indices run from 0 to length -1
        Eg. c.length - 1
        - Access outside this range is an error during program execution

    - Length is a field on arrays
        - Read as arr.length without parentheses.
        - Contrast with String.length() which is a method

    - Check edge cases explicitly
        - An empty array has length == 0 and no last index to read

    - Reading length is constant time
        - Prefer i < arr.length rather than hard-coding bounds